{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useDisclosure } from '@chakra-ui/react';\nexport const Method = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [gitHubData, setGitHubData] = useState(undefined);\n  const [repoData, setRepoData] = useState(undefined);\n  const [language, setLanguage] = useState(undefined);\n  const [starts, setStarts] = useState(undefined);\n  const [watch, setWatch] = useState(undefined);\n  const [forks, setForks] = useState(undefined);\n  const [issues, setIssues] = useState(undefined);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const textChange = e => {\n    setInputValue(e.target.value);\n  };\n  const downEnter = e => {\n    if (inputValue === '') {\n      return;\n    }\n    if (e.key === 'Enter') {\n      setLoading(true);\n      axios.get(`https://api.github.com/search/repositories?q=${inputValue}+in:name&sort=stars`).then(res => {\n        setGitHubData(res.data.items);\n        setLoading(false);\n      }).catch(error => {\n        console.error(error);\n        setLoading(false);\n      });\n    }\n  };\n  const handleRequest = () => {\n    setLoading(true);\n    axios.get(`https://api.github.com/search/repositories?q=${inputValue}+in:name&sort=stars`).then(res => {\n      setGitHubData(res.data.items);\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setLoading(false);\n    });\n  };\n  const handleData = data => {\n    const updataGitHunData = [data];\n    setRepoData(updataGitHunData);\n    onOpen();\n  };\n\n  // const clickButtton = (e: React.FormEventHandler<HTMLFormElement>) => {\n  //   console.log('aaaa', e);\n  // };\n  const clickButtton = () => {\n    if (language) {\n      const updataLanguage = gitHubData === null || gitHubData === void 0 ? void 0 : gitHubData.filter(data => data.language === language);\n      setGitHubData(updataLanguage);\n    }\n    if (starts) {\n      const updatastars = gitHubData === null || gitHubData === void 0 ? void 0 : gitHubData.filter(data => data.stargazers_count === starts);\n      setGitHubData(updatastars);\n    }\n    if (watch) {\n      const updatawatch = gitHubData === null || gitHubData === void 0 ? void 0 : gitHubData.filter(data => data.watchers_count === watch);\n      setGitHubData(updatawatch);\n    }\n    if (forks) {\n      const updataforks = gitHubData === null || gitHubData === void 0 ? void 0 : gitHubData.filter(data => data.forks_count === forks);\n      setGitHubData(updataforks);\n    }\n    if (issues) {\n      const updataIssue = gitHubData === null || gitHubData === void 0 ? void 0 : gitHubData.filter(data => data.open_issues_count === issues);\n      setGitHubData(updataIssue);\n    }\n    console.log('git', gitHubData);\n  };\n  const filterLanguageTextChange = e => {\n    setLanguage(e.target.value);\n  };\n  const filterStartTextChange = e => {\n    setStarts(e.target.value);\n  };\n  const filterWatchTextChange = e => {\n    setWatch(e.target.value);\n  };\n  const filterForksTextChange = e => {\n    setForks(e.target.value);\n  };\n  const filterIssueTextChange = e => {\n    setIssues(e.target.value);\n  };\n  return {\n    loading,\n    gitHubData,\n    textChange,\n    downEnter,\n    inputValue,\n    handleRequest,\n    handleData,\n    repoData,\n    isOpen,\n    onClose,\n    clickButtton,\n    filterLanguageTextChange,\n    filterStartTextChange,\n    filterWatchTextChange,\n    filterForksTextChange,\n    filterIssueTextChange\n  };\n};\n_s(Method, \"Sor4sUuo8AU1yp9C24D0iQz5Wj4=\", false, function () {\n  return [useDisclosure];\n});\n_c = Method;\nvar _c;\n$RefreshReg$(_c, \"Method\");","map":{"version":3,"names":["useState","axios","useDisclosure","Method","_s","inputValue","setInputValue","loading","setLoading","gitHubData","setGitHubData","undefined","repoData","setRepoData","language","setLanguage","starts","setStarts","watch","setWatch","forks","setForks","issues","setIssues","isOpen","onOpen","onClose","textChange","e","target","value","downEnter","key","get","then","res","data","items","catch","error","console","handleRequest","handleData","updataGitHunData","clickButtton","updataLanguage","filter","updatastars","stargazers_count","updatawatch","watchers_count","updataforks","forks_count","updataIssue","open_issues_count","log","filterLanguageTextChange","filterStartTextChange","filterWatchTextChange","filterForksTextChange","filterIssueTextChange","_c","$RefreshReg$"],"sources":["/Users/user/p-theme/src/method/method.tsx"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { useDisclosure } from '@chakra-ui/react';\n\ntype Loading = boolean;\n\ntype GitHubData = {\n  id: number;\n  full_name: string;\n  owner: [];\n  language: string;\n  stargazers_count: number;\n  watchers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n};\n\ntype Number = number;\nexport const Method = () => {\n  const [inputValue, setInputValue] = useState<String | undefined>('');\n  const [loading, setLoading] = useState<Loading>(false);\n  const [gitHubData, setGitHubData] = useState<GitHubData[] | undefined>(\n    undefined\n  );\n  const [repoData, setRepoData] = useState<GitHubData[] | undefined>(undefined);\n  const [language, setLanguage] = useState<String | undefined>(undefined);\n  const [starts, setStarts] = useState<Number | undefined>(undefined);\n  const [watch, setWatch] = useState<Number | undefined>(undefined);\n  const [forks, setForks] = useState<Number | undefined>(undefined);\n  const [issues, setIssues] = useState<Number | undefined>(undefined);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const textChange = (e: any) => {\n    setInputValue(e.target.value);\n  };\n\n  const downEnter = (e: any) => {\n    if (inputValue === '') {\n      return;\n    }\n    if (e.key === 'Enter') {\n      setLoading(true);\n      axios\n        .get(\n          `https://api.github.com/search/repositories?q=${inputValue}+in:name&sort=stars`\n        )\n        .then((res) => {\n          setGitHubData(res.data.items);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setLoading(false);\n        });\n    }\n  };\n  const handleRequest = () => {\n    setLoading(true);\n    axios\n      .get(\n        `https://api.github.com/search/repositories?q=${inputValue}+in:name&sort=stars`\n      )\n      .then((res) => {\n        setGitHubData(res.data.items);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoading(false);\n      });\n  };\n  const handleData = (data: GitHubData) => {\n    const updataGitHunData: GitHubData[] = [data];\n    setRepoData(updataGitHunData);\n    onOpen();\n  };\n\n  // const clickButtton = (e: React.FormEventHandler<HTMLFormElement>) => {\n  //   console.log('aaaa', e);\n  // };\n  const clickButtton = () => {\n    if (language) {\n      const updataLanguage = gitHubData?.filter(\n        (data) => data.language === language\n      );\n      setGitHubData(updataLanguage);\n    }\n    if (starts) {\n      const updatastars = gitHubData?.filter(\n        (data) => data.stargazers_count === starts\n      );\n      setGitHubData(updatastars);\n    }\n    if (watch) {\n      const updatawatch = gitHubData?.filter(\n        (data) => data.watchers_count === watch\n      );\n      setGitHubData(updatawatch);\n    }\n    if (forks) {\n      const updataforks = gitHubData?.filter(\n        (data) => data.forks_count === forks\n      );\n      setGitHubData(updataforks);\n    }\n    if (issues) {\n      const updataIssue = gitHubData?.filter(\n        (data) => data.open_issues_count === issues\n      );\n      setGitHubData(updataIssue);\n    }\n    console.log('git', gitHubData);\n  };\n  const filterLanguageTextChange = (e: any) => {\n    setLanguage(e.target.value);\n  };\n\n  const filterStartTextChange = (e: any) => {\n    setStarts(e.target.value);\n  };\n\n  const filterWatchTextChange = (e: any) => {\n    setWatch(e.target.value);\n  };\n\n  const filterForksTextChange = (e: any) => {\n    setForks(e.target.value);\n  };\n\n  const filterIssueTextChange = (e: any) => {\n    setIssues(e.target.value);\n  };\n\n  return {\n    loading,\n    gitHubData,\n    textChange,\n    downEnter,\n    inputValue,\n    handleRequest,\n    handleData,\n    repoData,\n    isOpen,\n    onClose,\n    clickButtton,\n    filterLanguageTextChange,\n    filterStartTextChange,\n    filterWatchTextChange,\n    filterForksTextChange,\n    filterIssueTextChange,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}