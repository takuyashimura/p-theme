{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useDisclosure } from '@chakra-ui/react';\nexport const Method = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [gitHubData, setGitHubData] = useState(undefined);\n  const [repoData, setRepoData] = useState(undefined);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const textChange = e => {\n    setInputValue(e.target.value);\n  };\n  const downEnter = e => {\n    if (inputValue === '') {\n      return;\n    }\n    if (e.key === 'Enter') {\n      setLoading(true);\n      axios.get(`https://api.github.com/search/repositories?q=${inputValue}+in:name&sort=stars`).then(res => {\n        setGitHubData(res.data.items);\n        setLoading(false);\n      }).catch(error => {\n        console.error(error);\n        setLoading(false);\n      });\n    }\n  };\n  const handleRequest = () => {\n    setLoading(true);\n    axios.get(`https://api.github.com/search/repositories?q=${inputValue}+in:name&sort=stars`).then(res => {\n      console.log('rex', res);\n      setGitHubData(res.data.items);\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setLoading(false);\n    });\n  };\n  const handleData = data => {\n    const updataGitHunData = [data];\n    setRepoData(updataGitHunData);\n    onOpen();\n  };\n  return {\n    loading,\n    gitHubData,\n    textChange,\n    downEnter,\n    inputValue,\n    handleRequest,\n    handleData,\n    repoData,\n    isOpen,\n    onClose\n  };\n};\n_s(Method, \"2IzFNqCy37aWk/PVUXiNSbJBRsI=\", false, function () {\n  return [useDisclosure];\n});\n_c = Method;\nvar _c;\n$RefreshReg$(_c, \"Method\");","map":{"version":3,"names":["useState","axios","useDisclosure","Method","_s","inputValue","setInputValue","loading","setLoading","gitHubData","setGitHubData","undefined","repoData","setRepoData","isOpen","onOpen","onClose","textChange","e","target","value","downEnter","key","get","then","res","data","items","catch","error","console","handleRequest","log","handleData","updataGitHunData","_c","$RefreshReg$"],"sources":["/Users/user/p-theme/src/method/method.tsx"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { useDisclosure } from '@chakra-ui/react';\n\ntype Loading = boolean;\n\ntype GitHubData = {\n  id: number;\n  full_name: string;\n  owner: [];\n  language: string;\n  stargazers_count: number;\n  watchers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n};\n\nexport const Method = () => {\n  const [inputValue, setInputValue] = useState<String | undefined>('');\n  const [loading, setLoading] = useState<Loading>(false);\n  const [gitHubData, setGitHubData] = useState<GitHubData[] | undefined>(\n    undefined\n  );\n  const [repoData, setRepoData] = useState<GitHubData[] | undefined>(undefined);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const textChange = (e: any) => {\n    setInputValue(e.target.value);\n  };\n\n  const downEnter = (e: any) => {\n    if (inputValue === '') {\n      return;\n    }\n    if (e.key === 'Enter') {\n      setLoading(true);\n      axios\n        .get(\n          `https://api.github.com/search/repositories?q=${inputValue}+in:name&sort=stars`\n        )\n        .then((res) => {\n          setGitHubData(res.data.items);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setLoading(false);\n        });\n    }\n  };\n  const handleRequest = () => {\n    setLoading(true);\n    axios\n      .get(\n        `https://api.github.com/search/repositories?q=${inputValue}+in:name&sort=stars`\n      )\n      .then((res) => {\n        console.log('rex', res);\n        setGitHubData(res.data.items);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoading(false);\n      });\n  };\n  const handleData = (data: GitHubData) => {\n    const updataGitHunData: GitHubData[] = [data];\n    setRepoData(updataGitHunData);\n    onOpen();\n  };\n\n  return {\n    loading,\n    gitHubData,\n    textChange,\n    downEnter,\n    inputValue,\n    handleRequest,\n    handleData,\n    repoData,\n    isOpen,\n    onClose,\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAehD,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAqB,EAAE,CAAC;EACpE,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAC1CW,SACF,CAAC;EACD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAA2BW,SAAS,CAAC;EAE7E,MAAM;IAAEG,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGd,aAAa,CAAC,CAAC;EACnD,MAAMe,UAAU,GAAIC,CAAM,IAAK;IAC7BZ,aAAa,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,SAAS,GAAIH,CAAM,IAAK;IAC5B,IAAIb,UAAU,KAAK,EAAE,EAAE;MACrB;IACF;IACA,IAAIa,CAAC,CAACI,GAAG,KAAK,OAAO,EAAE;MACrBd,UAAU,CAAC,IAAI,CAAC;MAChBP,KAAK,CACFsB,GAAG,CACD,gDAA+ClB,UAAW,qBAC7D,CAAC,CACAmB,IAAI,CAAEC,GAAG,IAAK;QACbf,aAAa,CAACe,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;QAC7BnB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,CACDoB,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBrB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;IACN;EACF,CAAC;EACD,MAAMuB,aAAa,GAAGA,CAAA,KAAM;IAC1BvB,UAAU,CAAC,IAAI,CAAC;IAChBP,KAAK,CACFsB,GAAG,CACD,gDAA+ClB,UAAW,qBAC7D,CAAC,CACAmB,IAAI,CAAEC,GAAG,IAAK;MACbK,OAAO,CAACE,GAAG,CAAC,KAAK,EAAEP,GAAG,CAAC;MACvBf,aAAa,CAACe,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;MAC7BnB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDoB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBrB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EACD,MAAMyB,UAAU,GAAIP,IAAgB,IAAK;IACvC,MAAMQ,gBAA8B,GAAG,CAACR,IAAI,CAAC;IAC7Cb,WAAW,CAACqB,gBAAgB,CAAC;IAC7BnB,MAAM,CAAC,CAAC;EACV,CAAC;EAED,OAAO;IACLR,OAAO;IACPE,UAAU;IACVQ,UAAU;IACVI,SAAS;IACThB,UAAU;IACV0B,aAAa;IACbE,UAAU;IACVrB,QAAQ;IACRE,MAAM;IACNE;EACF,CAAC;AACH,CAAC;AAACZ,EAAA,CAnEWD,MAAM;EAAA,QAQmBD,aAAa;AAAA;AAAAiC,EAAA,GARtChC,MAAM;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}